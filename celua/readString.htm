<html>
<head><link href="../css/default.css" rel="stylesheet"></head>
<body>
<title>readString</title>
<a href="ceindex.htm" style="float:right">Index</a>
<pre><h1>readString</h1>
Reads a string till it encounters a 0-terminator
<div class="codeUsage"><strong>readString</strong>( address [, maxlength=50 [, bWideChar=false]] )</div>
<br><h2>Parameters</h2></pre>
<table><tbody>
<tr><td>address</td><td>The address of the string to be read</td></tr>
<tr><td>maxlength</td><td><strong>[optional] </strong></strong>Max length of the string in bytes<br>default(50)</td></tr>
<tr><td>bWideChar</td><td><strong>[optional] </strong></strong>Set this to true if you want to read the string as a wide char<br>default(false)</td></tr>
</tbody></table>
<pre>
<h2>Return Value</h2>
Returns the string at the specified address


<h2>Remarks</h2>
If the memory can't be read, the return value is nil

Maxlength is just so you won't freeze for too long, set to 6000 if you don't care too much

The address is typically an integer, but it can be represented as a string(AddressString) aswell


<h2>Related</h2>
<a href="readByte.htm">readByte</a>, <a href="readBytes.htm">readBytes</a>, <a href="readSmallInteger.htm">readSmallInteger</a>, <a href="readInteger.htm">readInteger</a>, <a href="readPointer.htm">readPointer</a>, <a href="readFloat.htm">readFloat</a>, <a href="readQword.htm">readQword</a>, <a href="readDouble.htm">readDouble</a>
<a href="writeBytes.htm">writeBytes</a>, <a href="writeSmallInteger.htm">writeSmallInteger</a>, <a href="writeInteger.htm">writeInteger</a>, <a href="writeQword.htm">writeQword</a>, <a href="writeFloat.htm">writeFloat</a>, <a href="writeDouble.htm">writeDouble</a>, <a href="writePointer.htm">writePointer</a>, <a href="writeString.htm">writeString</a>
</pre>




<pre><h2>Example 1</h2>
<div class="codeSnippet"><div class="codeSnippetToolbar"><a href="" onclick="navigator.clipboard.writeText(this.parentElement.parentElement.children[1].innerText);alert('Copied!')">Copy text</a></div><span class="codeText">
<a href=../keywords/function.htm class=lua-keyword>return</a> <a href=readString.htm class=lua-builtinfunc>readString</a><span class=lua-operator>(</span><a href=getAddress.htm class=lua-builtinfunc>getAddress</a><span class=lua-operator>(</span><span class=lua-variable>process</span><span class=lua-operator>)</span><span class=lua-operator>+</span><span class=lua-hex>0x4E</span><span class=lua-operator>,</span><span class=lua-number>40</span><span class=lua-operator>)</span>
</span></div></pre>


</body></html>