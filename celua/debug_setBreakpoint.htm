<html>
<head><link href="../css/default.css" rel="stylesheet"></head>
<body>
<a href="ceindex.htm" style="float:right">Index</a>
<pre><h1>debug_setBreakpoint</h1>
Sets a breakpoint on an address
<div class="codeUsage"><strong>debug_setBreakpoint</strong>( address [, size, trigger = bptExecute [, method = bpmDebugRegister ]] [, function] )</div>
<br><h2>Parameters</h2></pre>
<table><tbody>
<tr><td>address</td><td>Address where the breakpoint will be placed</td></tr>
<tr><td>size</td><td><strong>[optional] </strong>Size(in bytes) of the breakpoint</td></tr>
<tr><td>trigger</td><td><strong>[optional] </strong> What trigger to use:<br>
&nbsp;&nbsp;&nbsp;(0) bptExecute - break when the CPU executes the instruction at the address of the breakpoint<br>
&nbsp;&nbsp;&nbsp;(1) bptAccess - break when the CPU accesses the address of the breakpoint<br>
&nbsp;&nbsp;&nbsp;(2) bptWrite - break when the CPU writes to the address of the breakpoint</td></tr>
<tr><td>method</td><td><strong>[optional] </strong>What method to use:<br>
&nbsp;&nbsp;&nbsp;(0) bpmInt3 - Software breakpoint<br>
&nbsp;&nbsp;&nbsp;(1) bpmDebugRegister - Hardware breakpoint<br>
&nbsp;&nbsp;&nbsp;(2) bpmException - Exception breakpoint</td></tr>
<tr><td>function</td><td><strong>[optional] </strong>The function that will be executed when the breakpoint triggers</td></tr>

</tbody></table>
<pre>
<h2>Remarks</h2>
If the <em>trigger</em> is bptExecute then <em>size</em> is ignored
If the <em>trigger</em> is bptAccess or bptWrite then <em>method</em> is bpmDebugRegister regardless

If the <em>function</em> parameter is defined: 
 -When the breakpoint gets hit, it will execute that function and continue the program. 
 -If you want to halt the execution return 1 in the function(must return 1, returning true or some other expression results in the program running)
 -The instruction at the <em>address</em> will get executed after the function finishes
 -You can access read and write <a href="ceindex.htm#debugvars">DEBUG</a> variables inside the function
    Note: When writing registers make sure to use appropriate ones depending on the process bitness!

It is possible to set 2 breakpoints on the same address which may lead to unwanted results. Use <em><a href="debug_removeBreakpoint.htm">debug_removeBreakpoint</a></em>
 before setting a breakpoint to circumvent this



<h2>Related</h2>
<a href="debug_removeBreakpoint.htm">debug_removeBreakpoint</a>, <a href="debug_setBreakpointForThread.htm">debug_setBreakpointForThread</a>, <a href="debug_continueFromBreakpoint.htm">debug_continueFromBreakpoint</a>, <a href="debug_getBreakpointList.htm">debug_getBreakpointList</a>, TODO(maybe add more of debug_XXX funcs or just a link to the INDEX page with all of them grouped?)


The following examples require that the  Cheat Engine Tutorial(64-bit) is running and on step 2:
</pre>


<pre><h2>Example 1</h2>
<div class="codeSnippet"><div class="codeSnippetToolbar"><a href="" onclick="navigator.clipboard.writeText(this.parentElement.parentElement.children[1].innerText);alert('Copied!')">Copy text</a></div><span class="codeText">
<a href=../keywords/ifthen.htm class=lua-keyword>if</a> <a href=../index.htm#1 class=lua-keyword>not</a> <a href=OpenProcess.htm class=lua-builtinfunc>OpenProcess</a><span class=lua-operator>(</span><span class=lua-string>"Tutorial-x86_64.exe"</span><span class=lua-operator>)</span> <a href=../keywords/ifthen.htm class=lua-keyword>then</a> <a href=print.htm class=lua-builtinfunc>print</a><span class=lua-operator>(</span><span class=lua-string>"Can't open the process :("</span><span class=lua-operator>)</span><span class=lua-operator>;</span><a href=../keywords/function.htm class=lua-keyword>return</a> <a href=../keywords/end.htm class=lua-keyword>end
</a><a href=../keywords/local.htm class=lua-keyword>local</a> <span class=lua-variable>HITaddress</span> <span class=lua-operator>=</span> <a href=getAddressSafe.htm class=lua-builtinfunc>getAddressSafe</a><span class=lua-operator>(</span><span class=lua-string>"Tutorial-x86_64.exe+2B4BC"</span><span class=lua-operator>)
</span><a href=../keywords/ifthen.htm class=lua-keyword>if</a> <span class=lua-variable>HITaddress</span> <span class=lua-operator>=</span><span class=lua-operator>=</span> <a href=../index.htm#2 class=lua-keyword>nil</a> <a href=../keywords/ifthen.htm class=lua-keyword>then</a> <a href=print.htm class=lua-builtinfunc>print</a><span class=lua-operator>(</span><span class=lua-string>"Can't find the 'Hit me' address :("</span><span class=lua-operator>)</span><span class=lua-operator>;</span><a href=../keywords/function.htm class=lua-keyword>return</a> <a href=../keywords/end.htm class=lua-keyword>end

</a><a href=debug_removeBreakpoint.htm class=lua-builtinfunc>debug_removeBreakpoint</a><span class=lua-operator>(</span><span class=lua-variable>HITaddress</span><span class=lua-operator>)
</span><a href=debug_setBreakpoint.htm class=lua-builtinfunc>debug_setBreakpoint</a><span class=lua-operator>(</span><span class=lua-variable>HITaddress</span><span class=lua-operator>,</span> <a href=../keywords/function.htm class=lua-keyword>function</a><span class=lua-operator>(</span><span class=lua-operator>)
</span>  <a href=printf.htm class=lua-builtinfunc>printf</a><span class=lua-operator>(</span><span class=lua-string>"Ouch! You just got hit and lost %s HP!"</span><span class=lua-operator>,</span> <span class=lua-variable>EAX</span><span class=lua-operator>)
</span><a href=../keywords/end.htm class=lua-keyword>end</a><span class=lua-operator>)

</span><a href=print.htm class=lua-builtinfunc>print</a><span class=lua-operator>(</span><span class=lua-string>"Press 'Hit me'"</span><span class=lua-operator>)</span>
</span></div></pre>

<pre><h2>Example 2</h2>
<div class="codeSnippet"><div class="codeSnippetToolbar"><a href="" onclick="navigator.clipboard.writeText(this.parentElement.parentElement.children[1].innerText);alert('Copied!')">Copy text</a></div><span class="codeText">
<a href=../keywords/ifthen.htm class=lua-keyword>if</a> <a href=../index.htm#1 class=lua-keyword>not</a> <a href=OpenProcess.htm class=lua-builtinfunc>OpenProcess</a><span class=lua-operator>(</span><span class=lua-string>"Tutorial-x86_64.exe"</span><span class=lua-operator>)</span> <a href=../keywords/ifthen.htm class=lua-keyword>then</a> <a href=print.htm class=lua-builtinfunc>print</a><span class=lua-operator>(</span><span class=lua-string>"Can't open the process :("</span><span class=lua-operator>)</span><span class=lua-operator>;</span><a href=../keywords/function.htm class=lua-keyword>return</a> <a href=../keywords/end.htm class=lua-keyword>end
</a><a href=../keywords/local.htm class=lua-keyword>local</a> <span class=lua-variable>HITaddress</span> <span class=lua-operator>=</span> <a href=getAddressSafe.htm class=lua-builtinfunc>getAddressSafe</a><span class=lua-operator>(</span><span class=lua-string>"Tutorial-x86_64.exe+2B4BC"</span><span class=lua-operator>)
</span><a href=../keywords/ifthen.htm class=lua-keyword>if</a> <span class=lua-variable>HITaddress</span> <span class=lua-operator>=</span><span class=lua-operator>=</span> <a href=../index.htm#2 class=lua-keyword>nil</a> <a href=../keywords/ifthen.htm class=lua-keyword>then</a> <a href=print.htm class=lua-builtinfunc>print</a><span class=lua-operator>(</span><span class=lua-string>"Can't find the 'Hit me' address :("</span><span class=lua-operator>)</span><span class=lua-operator>;</span><a href=../keywords/function.htm class=lua-keyword>return</a> <a href=../keywords/end.htm class=lua-keyword>end

</a><a href=debug_removeBreakpoint.htm class=lua-builtinfunc>debug_removeBreakpoint</a><span class=lua-operator>(</span><span class=lua-variable>HITaddress</span><span class=lua-operator>)
</span><a href=debug_setBreakpoint.htm class=lua-builtinfunc>debug_setBreakpoint</a><span class=lua-operator>(</span><span class=lua-variable>HITaddress</span><span class=lua-operator>,</span> <a href=../keywords/function.htm class=lua-keyword>function</a><span class=lua-operator>(</span><span class=lua-operator>)
</span>  <span class=lua-variable>RAX</span> <span class=lua-operator>=</span> <span class=lua-operator>-</span><span class=lua-number>5</span><span class=lua-comment>--this should increase our health by 5( HP - -5 = HP+5)
</span><a href=../keywords/end.htm class=lua-keyword>end</a><span class=lua-operator>)

</span><a href=print.htm class=lua-builtinfunc>print</a><span class=lua-operator>(</span><span class=lua-string>"Press 'Hit me'"</span><span class=lua-operator>)</span>
</span></div></pre>

<pre><h2>Example 3</h2>
<div class="codeSnippet"><div class="codeSnippetToolbar"><a href="" onclick="navigator.clipboard.writeText(this.parentElement.parentElement.children[1].innerText);alert('Copied!')">Copy text</a></div><span class="codeText">
<a href=../keywords/ifthen.htm class=lua-keyword>if</a> <a href=../index.htm#1 class=lua-keyword>not</a> <a href=OpenProcess.htm class=lua-builtinfunc>OpenProcess</a><span class=lua-operator>(</span><span class=lua-string>"Tutorial-x86_64.exe"</span><span class=lua-operator>)</span> <a href=../keywords/ifthen.htm class=lua-keyword>then</a> <a href=print.htm class=lua-builtinfunc>print</a><span class=lua-operator>(</span><span class=lua-string>"Can't open the process :("</span><span class=lua-operator>)</span><span class=lua-operator>;</span><a href=../keywords/function.htm class=lua-keyword>return</a> <a href=../keywords/end.htm class=lua-keyword>end
</a><a href=../keywords/local.htm class=lua-keyword>local</a> <span class=lua-variable>HPaddress</span> <span class=lua-operator>=</span> <a href=getAddressSafe.htm class=lua-builtinfunc>getAddressSafe</a><span class=lua-operator>(</span><span class=lua-string>"[Tutorial-x86_64.exe+325A70]+7F8"</span><span class=lua-operator>)
</span><a href=../keywords/ifthen.htm class=lua-keyword>if</a> <span class=lua-variable>HPaddress</span> <span class=lua-operator>=</span><span class=lua-operator>=</span> <a href=../index.htm#2 class=lua-keyword>nil</a> <a href=../keywords/ifthen.htm class=lua-keyword>then</a> <a href=print.htm class=lua-builtinfunc>print</a><span class=lua-operator>(</span><span class=lua-string>"Can't find the health address :("</span><span class=lua-operator>)</span><span class=lua-operator>;</span><a href=../keywords/function.htm class=lua-keyword>return</a> <a href=../keywords/end.htm class=lua-keyword>end

</a><a href=debug_removeBreakpoint.htm class=lua-builtinfunc>debug_removeBreakpoint</a><span class=lua-operator>(</span><span class=lua-variable>HPaddress</span><span class=lua-operator>)
</span><a href=debug_setBreakpoint.htm class=lua-builtinfunc>debug_setBreakpoint</a><span class=lua-operator>(</span><span class=lua-variable>HPaddress</span><span class=lua-operator>,</span> <span class=lua-number>4</span><span class=lua-operator>,</span> <span class=lua-variable>bptWrite</span><span class=lua-operator>,</span> <a href=../keywords/function.htm class=lua-keyword>function</a><span class=lua-operator>(</span><span class=lua-variable>...</span><span class=lua-operator>)
</span>  <a href=printf.htm class=lua-builtinfunc>printf</a><span class=lua-operator>(</span><span class=lua-string>"Something wrote to the HP and now your health is: %s"</span><span class=lua-operator>,</span> <a href=readInteger.htm class=lua-builtinfunc>readInteger</a><span class=lua-operator>(</span><span class=lua-variable>HPaddress</span><span class=lua-operator>)</span><span class=lua-operator>)
</span><a href=../keywords/end.htm class=lua-keyword>end</a><span class=lua-operator>)

</span><a href=print.htm class=lua-builtinfunc>print</a><span class=lua-operator>(</span><span class=lua-string>"Press 'Hit me'"</span><span class=lua-operator>)</span>
</span></div></pre>
</body>
</html>