<html>
<head><link href="../css/default.css" rel="stylesheet"></head>
<body>
<title>autoAssembleCheck</title>
<a href="ceindex.htm" style="float:right">Index</a>
<pre><h1>autoAssembleCheck</h1>
Check the script for errors
<div class="codeUsage"><strong>autoAssembleCheck</strong>( script [, bEnable = true [, bTargetself = false ]] )</div>
<br><h2>Parameters</h2></pre>
<table><tbody>
<tr><td>script</td><td>Auto Assemble script that will be checked for errors</td></tr>
<tr><td>bEnable</td><td><strong>[optional] </strong></strong>Set this to <i>true</i> if you want to check the [ENABLE] section<br>Set this to <i>false</i> if you want to check the [DISABLE] section<br>default(5)</td></tr>
<tr><td>bTargetself</td><td><strong>[optional] </strong></strong>If true, then the script will be checked as if it were assembled in Cheat Engine's memory, rather than the attached process'<br>default(false)</td></tr>
</tbody></table>
<pre>
<h2>Return Value</h2>
If the script has no errors it returns <b>true</b>, otherwise it returns 2 values:
  1.<b>false</b> 
  2.Error message as a <b>string </b>


<h2>Remarks</h2>
Very nice remarks


<h2>Related</h2>
<a href="RELATED_FUNCTION1.htm">%RELATED_FUNCTION_1%</a>, <a href="RELATED.htm">%RELATED_FUNCTION_2%</a>
</pre>




<pre><h2>Example 1</h2>
<div class="codeSnippet"><div class="codeSnippetToolbar"><a href="" onclick="navigator.clipboard.writeText(this.parentElement.parentElement.children[1].innerText);alert('Copied!')">Copy text</a></div><span class="codeText">
script
</span></div></pre>

<pre><h2>Example 2</h2>
<div class="codeSnippet"><div class="codeSnippetToolbar"><a href="" onclick="navigator.clipboard.writeText(this.parentElement.parentElement.children[1].innerText);alert('Copied!')">Copy text</a></div><span class="codeText">
script
</span></div></pre>

</body></html>