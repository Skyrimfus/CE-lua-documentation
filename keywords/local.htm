<html>
<head><link href="../css/default.css" rel="stylesheet"></head>
<a href="../index.htm" style="float:right">Index</a>
<pre>
<h1>local keyword</h1>
Declare a local variable
<div class="codeUsage"><strong>local</strong> variable [, variable2 [, variable3 ... [, variableN]]] [ = value [, value2 ... ]]</div>
<h2>Parameters</h2>
<table><tbody>
<tr><td>variable</td><td>The name of the variable(s) to be declared</td></tr>
<tr><td>value</td><td><strong>[optional] </strong></strong>A value to be assigned</td></tr>
</tbody></table>
<h2>Remarks</h2>
A local variable will only exist in the code block(scope) it was declared in
If the value is empty, the value assigned is nil

Lua accesses local variables faster than global ones, therefore it's good practice to use local as often as possible
</pre>

<pre>
<h2>Example</h2>
<div class="codeSnippet">
<span class=lua-keyword>do
 local </span><span class=lua-variable>var
 </span><span class=lua-keyword>local </span><span class=lua-variable>abs </span><span class=lua-operator>= </span><span class=lua-variable>math.abs
 </span><span class=lua-keyword>for </span><span class=lua-variable>i</span><span class=lua-operator>=-</span><span class=lua-number>10</span><span class=lua-operator>, </span><span class=lua-number>0 </span><span class=lua-keyword>do
     </span><span class=lua-variable>var </span><span class=lua-operator>= </span><span class=lua-variable>abs</span><span class=lua-operator>(</span><span class=lua-variable>i</span><span class=lua-operator>)
     </span><span class=lua-builtinfunc>print</span><span class=lua-operator>(</span><span class=lua-variable>var</span><span class=lua-operator>)
 </span><span class=lua-keyword>end
end
</span><span class=lua-builtinfunc>print</span><span class=lua-operator>(</span><span class=lua-variable>var</span><span class=lua-operator>)</span>
</div>
</pre>
</html>