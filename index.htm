<html>
<head><link href="css/default.css" rel="stylesheet"></head>
<pre>
<h2>Cheat Engine specific functions</h2>
<a href="celua/ceindex.htm">A list of Cheat Engine functions can be found here</a>
<h2>Lua keywords</h2>
<a href=#1>and</a>
<a href="keywords/break.htm">break</a>
<a href="keywords/do.htm">do</a>
<a href="keywords/ifelse.htm">else</a>
<a href="keywords/ifelse.htm">elseif</a>
<a href="keywords/end.htm">end</a>
<a href=#2>false</a>
<a href="keywords/numericfor.htm">for</a>
<a href="keywords/function.htm">function</a>
<a href="keywords/ifthen.htm">if</a>
<a href="keywords/genericfor.htm">in</a>
<a href="keywords/local.htm">local</a>
<a href=#2>nil</a>
<a href=#1>not</a>
<a href=#1>or</a>
<a href="keywords/repeat.htm">repeat</a>
<a href="keywords/function.htm">return</a>
<a href="keywords/ifthen.htm">then</a>
<a href=#2>true</a>
<a href="keywords/repeat.htm">until</a>
<a href="keywords/while.htm">while</a>

<h2>Lua logical operators</h2>
<table><tbody>
<tr><td class="lua-keyword" id="1">and</td><td>Logical and operation e.g.<span class="lua-keyword">if</span> varX == 2 <span class="lua-keyword">and</span> varY == 3 <span class="lua-keyword">then</span> ... (true if varX is 2 <strong>and</strong> varY is 3)</td></tr>
<tr><td class="lua-keyword">or</td><td>Logical or operation e.g.<span class="lua-keyword">if</span> varX == 2 <span class="lua-keyword">or</span> varY == 3 <span class="lua-keyword">then</span> ... (true if varX is 2 <strong>or</strong> varY is 3)</td></tr>
<tr><td class="lua-keyword">not</td><td>Logical not operation e.g.<span class="lua-keyword">if</span>  <span class="lua-keyword">not</span> (varX == 2) <span class="lua-keyword">then</span> ... (true if varX is <strong>not</strong> 2)</td></tr>
</tbody></table>


<h2>Lua bitwise operators</h2>
<table><tbody>
<tr><td>&lt&lt</td><td>bit shift left e.g. 3&lt&lt2 will shift the number 3 to the left 2 times (output = 12)</td></tr>
<tr><td>&gt&gt</td><td>bit shift right e.g. 8&gt&gt2 will shift the number 8 to the right 2 times (output = 2)</td></tr>
<tr><td>&amp</td><td>bitwise and e.g. 7&amp5 (output = 5)</td></tr>
<tr><td>|</td><td>bitwise or e.g. 7|5 (output = 7)</td></tr>
<tr><td>~</td><td>bitwise not e.g. ~5 (output = -6)</td></tr>
<tr><td>~</td><td>bitwise xor e.g. 8~2 will xor 8 with 2 (output = 10)</td></tr>
</tbody></table>


<h2>Lua values</h2>
<table><tbody>
<tr><td><span class="lua-keyword" id="2">nil</span></td><td>Nil is a value whos main purpose is to be different than any other value. All variables have a nil value by default before a first assignment. You can delete a variable by assigning nil to it</td></tr>
<tr><td><span class="lua-keyword">true</span></td><td>Boolean true</td></tr>
<tr><td><span class="lua-keyword">false</span></td><td>Boolean false</td></tr>
</tbody></table>
</pre>


<!-- <table><tbody> -->
<!-- <tr><td>first</td><td>second</td></tr> -->
<!-- </tbody></table> -->


</html>
<!-- "and","break","do","else","elseif","end","false","for","function","if","in","local","nil","not","or","repeat","return","then","true","until","while" -->
